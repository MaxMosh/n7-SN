{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18300\viewh13320\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs36 \cf0 Programming Practical of VDA for a spatial hydrology problem
\f1\b0 \
* \
Installation de packages Python avec conda.\
 Quelques commandes.\
 $ conda - - help \
$conda list \
$conda info etc\
\
fenics_env.yml: contient une liste de packages qui font que le\'a0code fonctionne sur mon Mac. \
Ces packages doivent etre installes sur votre propre machine.\
\
A executer via $ conda env create -f fenics_env.yml\
=> A faire sur machines Linux ou Linux de windows.\
Par defaut tenter avec les der versions des packages (ce qui est ok sur mon Mac\'85).  \
\
$ conda install -n fenics_my -c conda-forge fenics=2019.1.0\
$ conda install -n fenics_my -c conda-forge matplotlib\
l\'92environnement local \'91fenics_my\'92est alors ok\'85\
\
\pard\pardeftab720\sa240\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
*********************\
* Description of the code\
**********************\
*  Create the following directories if non existing: ./data/  ./data_new/  ./results/\
Defaut data directory = ./data/ (to be created if non existent)\
Results are written in the directory ./results/\
\
\
* To execute the main program: $ python main.py\
Read and follow the instructions !\'85\
\
* File \'ab\'a0main.py\'a0\'ab\'a0\
- Routine \'ab\'a0run_direct\'a0\'bb:  Solve the direct model.\
- Routine \'ab generate_obs\'a0\'bb:\'a0Generate observations from the model output H(b)\
- Routine \'ab run_vda\'a0\'bb: prepare and call the complete vda process.\
Here, are defined: the 1st guess value; the regularization term form (grad ou b_b)\
- + the main program\
\
File \'ab\'a0generate_case.py\'a0\'bb\
- Routine \'ab\'a0generate_case\'a0\'bb:   generate a river geometry + the background value b_b (+ the Dirichlet BC values). \
- Routine \'ab define_Href\'a0\'bb:\'a0define Href either as a simple linear function  or from a value H_t (= model output already performed for the same bathymetry). \
\
* File \'ab\'a0class_vda.py\'ab\'a0: it contains the class \'ab\'a0vda_river\'a0\'bb.\
All the fundamentals routines for the models resolutions and the iterative optimization method are defined in this class.\
- Routine _init_\
\
- Routine VDA\
It performs the complete VDA iterative process. This routine contains the key callback_fct routine.\
The 4D-var algorithm is implemented here. \
The Pyhton minimizer is called here (call spo.minimize) \
The iterative regularization strategy is here defined (balance between the two cost function terms). \
\
- Routine Observations. \
	Here, you can add noise and/or consider a few observations only. \
\
- Routine Direct_model\
Implement the direct model weak forms (FEniCS) + solve.\
- Routine Cost\
Compute the cost function (therefore including J_reg)\
- Routine Adjoint_Model\
Implement the adjoint model weak forms (FEniCS) + solve.\
- Routine Gradient_Cost\
Compute the gradient cost function (therefore including J_reg)\
\
* File \'ab\'a0test_gradient.py\'bb \
- Routine \'ab\'a0test_gradient\'a0\'bb: Perform the gradient test.\
\
* File \'abplots.py\'a0\'bb\
- Routines plot_direct, plot_outputVDA\
\
* File \'ab\'a0utils.py\'a0\'bb\
- Routines of convertion: nparray_to_FEfct(V,x) and FEfct_to_nparray(mesh,fct ):  convert a FEniCS function to a numpy array  and reciprocally \
}
knitr::opts_chunk$set(echo = TRUE)
ks.test(x, y, alternative = "less") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
x = c(458, 478, 538, 548, 548, 568, 578, 618)
y = c(360, 380, 400, 430, 430, 480, 490, 570)
ks.test(x, y, alternative = "less") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
wilcox.test(x, y, alternative = "greater") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
x = c(458, 478, 538, 548, 549, 568, 578, 618)
x = c(458, 478, 538, 548, 549, 568, 578, 618)
y = c(360, 380, 400, 430, 431, 480, 490, 570)
wilcox.test(x, y, alternative = "greater") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
x = c(458, 478, 538, 548, 548, 568, 578, 618)
y = c(360, 380, 400, 430, 430, 480, 490, 570)
ks.test(x, y, alternative = "less") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
ks.test(x, y, alternative = "less") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
```{r cars}
wilcox.test(x, y, alternative = "greater") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
```{r}
```{r cars}
x = c(458, 478, 538, 548, 548, 568, 578, 618)
y = c(360, 380, 400, 430, 430, 480, 490, 570)
ks.test(x, y, alternative = "less") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
wilcox.test(x, y, alternative = "greater") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
```{r}
---
title: "Tests non paramétriques - TD 1 : exercice 2"
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
## Exercice 2
```{r}
x = c(458, 478, 538, 548, 548, 568, 578, 618)
y = c(360, 380, 400, 430, 430, 480, 490, 570)
ks.test(x, y, alternative = "less") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
ks.test(x, y, alternative = "less") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
```{r}
wilcox.test(x, y, alternative = "greater") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
wilcox.test(x, y, alternative = "greater") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
```{r}
wilcox.test(x, y, alternative = "greater") # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
knitr::opts_chunk$set(echo = TRUE)
x = c(0.15, 0.18, 0.22, 0.26, 0.39, 0.53, 0.62, 0.7, 0.96, 0.99)
ks.test(x, punif) # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]
knitr::opts_chunk$set(echo = TRUE)
x = c(12.51, 12.48, 12.91, 12.56, 12.58, 12.82, 12.53, 12.50, 12.51, 12.42)
y = c(12.82, 12.79, 12.74, 12.88, 12.82, 12.40, 12.84, 12.81, 12.91, 12.39)
z = y - x
t.test(z)
knitr::opts_chunk$set(echo = TRUE)
x = c(0.15, 0.18, 0.22, 0.26, 0.39, 0.53, 0.62, 0.7, 0.96, 0.99)
ks.test(x, punif) # l'argument "punif" permet d'effectuer le test de Kolmogorov avec la fonction de répartition d'une loi uniforme sur [0, 1]

library(knitr)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=FALSE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
class.source="badCode")
opts_knit$set(width=75)
library(bestglm)
library(bestglm)
library(ggfortify)
library(ggplot2)
library(gridExtra)
library(VGAM)
library(pROC)
library(MASS)
data(SAheart)
SAheart$chd<-as.factor(SAheart$chd)
? SAheart
# A COMPLETER
boxplot(SAheart)
SAheart_scaled <- scale(SAheart)
# A COMPLETER
boxplot(SAheart)
# A COMPLETER
head(SAheart)
boxplot(SAheart)
# A COMPLETER
head(SAheart)
boxplot(SAheart)
# A COMPLETER
head(SAheart)
summary(SAheart)
boxplot(SAheart)
chd_ldl = glm(chd ~ ldl)
chd_ldl = glm(SAheart$chd ~ SAheart$ldl)
chd_ldl = glm(formula = SAheart$chd ~ SAheart$ldl, family = binomial(link = "logit"))
summary(chd_ldl)
# A COMPLETER
head(SAheart)
quantitatives_SAheart <- log(scale(SAheart[sapply(SAheart,is.numeric)]))
boxplot(quantitatives_SAheart)
# A COMPLETER
head(SAheart)
quantitatives_SAheart <- scale(SAheart[sapply(SAheart,is.numeric)])
boxplot(quantitatives_SAheart)
# A COMPLETER
head(SAheart)
quantitatives_SAheart <- log(scale(SAheart[sapply(SAheart,is.numeric)]))
boxplot(quantitatives_SAheart)
# A COMPLETER
head(SAheart)
quantitatives_SAheart <- scale(SAheart[sapply(SAheart,is.numeric)])
boxplot(quantitatives_SAheart)
chd_ldl = glm(formula = chd ~ ldl, data = SAheart, family = binomial(link = "logit"))
summary(chd_ldl)
# A COMPLETER
head(SAheart)
quantitatives_SAheart <- SAheart[sapply(SAheart,is.numeric)]
boxplot(quantitatives_SAheart)
# A COMPLETER
head(SAheart)
quantitatives_SAheart <- SAheart[sapply(SAheart,is.numeric)]
boxplot(quantitatives_SAheart)
qualitatives_SAheart <- SAheart[sapply(SAheart,-is.numeric)]
qualitatives_SAheart <- SAheart[sapply(SAheart,~is.numeric)]
# A COMPLETER
head(SAheart)
quantitatives_SAheart <- SAheart[sapply(SAheart,is.numeric)]
boxplot(quantitatives_SAheart)
qualitatives_SAheart <- SAheart[sapply(SAheart,not(is.numeric)]
boxplot(quantitatives_SAheart)
quantitatives_SAheart <- SAheart[sapply(SAheart,is.numeric)]
# A COMPLETER
head(SAheart)
# A COMPLETER
head(SAheart)
quantitatives_SAheart <- SAheart[sapply(SAheart,is.numeric)]
boxplot(quantitatives_SAheart)
barplot(SAheart$famist)
barplot(SAheart$famist)
barplot(SAheart$chd)
$
pseudoR2 = 1 - chd_ldl$deviance/chd_ldl$null.deviance
pseudoR2
# A COMPLETER
anova(chd_ldl, test="Chisq")
# A COMPLETER
anova(chd ~ .,chd_ldl, test="Chisq")
# A COMPLETER
anova(glm(chd ~ 1, data = SAheart, family = "binomial"),chd_ldl, test="Chisq")
# A COMPLETER
confint.default(chd_ldl)
pihat<-predict(chd_ldl,type="response")
df1<-data.frame(ldl=SAheart$ldl,pihat=pihat,
Yihat= as.numeric(pihat > 0.5) ,
Yi=as.numeric(SAheart$chd)-1)
ggplot(df1)+
geom_point(aes(x=ldl,y=Yihat),col="blue")+
geom_smooth(aes(x=ldl,y=pihat),col="black")+
geom_point(aes(x=ldl,y=Yi),col="red",shape=0)+
xlab("ldl")+
ylab("pi / Yhat / Y")
chd_famhist = glm(formula = chd ~ famhist, data = SAheart, family = binomial)
summary(chd_famhist)
chd_famhist = glm(formula = chd ~ famhist, data = SAheart, family = binomial)
summary(chd_famhist)
modellogit=glm(chd ~ ., family = "binomial")
modellogit=glm(chd ~ .,data = SAheart, family = "binomial")
summary(modellogit)
bestglm(SAheart,family=binomial,IC="AIC")
bestglm(SAheart,family=binomial,IC="BIC")
step.backward = step(modellogit)
step.backward = step(modellogit, direction="backward",k=log(nrow(SAheart)))
modelbest = glm(chd ~ ldl + typea + tobacco + famhist + age, data = SAheart, family = "binomial")
anova(modelbest,modellogit)
pseudoR2 = 1 - modelbest$deviance/modelbest$null.deviance
pseudoR2
anova(modelbest,modellogit)
pseudoR2 = 1 - modelbest$deviance/modelbest$null.deviance
pseudoR2
anova(modelbest,modellogit)
anova(modelbest,modellogit, test = "Chisq")
exp(modelbest$coefficients)
exp(modelbest$coefficients)
modellogitinter = glm(chd~(.)^2, data = SAheart, family= inomial(link = "logit"))
modellogitinter = glm(chd~(.)^2, data = SAheart, family= binomial(link = "logit"))
summary(modellogitinter)
summary(modelbestinter)
# Procédures de sélection de variables
# A COMPLETER
modelbestinter = step(modellogitinter, trace = F)
# Procédures de sélection de variables
# A COMPLETER
modelbestinter = step(modellogitinter, trace = F)
summary(modelbestinter)
# A COMPLETER
anova(modellogit, modellogitinter, test = "Chisq")
anova(modelbest, modellogitinter, test = "Chisq")
anova(modelbest, modelbestinter, test = "Chisq") # Attention, faire attention ici que l'un est bien sous-modèle de l'autre, en regardant si les variables conservé par modelbest sont présentes dans modelbestinter
l<-300
perm<-sample(nrow(SAheart))
# Echantillon d'apprentissage
dapp<-SAheart[perm[1:l],]
# Echantillon test
dtest<-SAheart[-perm[1:l],]
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp<-glm(chd~tobacco + ldl + famhist
+ typea + age,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev<-predict(modelapp,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev>0.5)!=dtest$chd)
library(pROC)
rocobj1 <- roc(dtest$chd, prev1)
l<-300
perm<-sample(nrow(SAheart))
# Echantillon d'apprentissage
dapp<-SAheart[perm[1:l],]
# Echantillon test
dtest<-SAheart[-perm[1:l],]
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp1<-glm(chd~tobacco + ldl + famhist
+ typea + age,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev1<-predict(modelapp,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev>0.5)!=dtest$chd)
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp2<-glm(chd~.,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev2<-predict(modelapp,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev>0.5)!=dtest$chd)
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp3<-glm(chd~1,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev3<-predict(modelapp,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev>0.5)!=dtest$chd)
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp4<-glm(chd~ tobacco + ldl + adiposity + famhist + typea + obseity +  alcohol + age + tobaccp:typea + tobacco:alcohol + ldl:famhist + adiposity:famhist + adiposity:obesity + adiposity:alcohol + famhist:alcohol + famhist:age + typea:alcohol,family=binomial,data=dapp)
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp4<-glm(chd~ tobacco + ldl + adiposity + famhist + typea + obesity +  alcohol + age + tobaccp:typea + tobacco:alcohol + ldl:famhist + adiposity:famhist + adiposity:obesity + adiposity:alcohol + famhist:alcohol + famhist:age + typea:alcohol,family=binomial,data=dapp)
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp4<-glm(chd~ tobacco + ldl + adiposity + famhist + typea + obesity +  alcohol + age + tobacco:typea + tobacco:alcohol + ldl:famhist + adiposity:famhist + adiposity:obesity + adiposity:alcohol + famhist:alcohol + famhist:age + typea:alcohol,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev4<-predict(modelapp,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev>0.5)!=dtest$chd)
l<-300
perm<-sample(nrow(SAheart))
# Echantillon d'apprentissage
dapp<-SAheart[perm[1:l],]
# Echantillon test
dtest<-SAheart[-perm[1:l],]
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp1<-glm(chd~tobacco + ldl + famhist
+ typea + age,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev1<-predict(modelapp,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev1>0.5)!=dtest$chd)
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp2<-glm(chd~.,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev2<-predict(modelapp,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev2>0.5)!=dtest$chd)
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp3<-glm(chd~1,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev3<-predict(modelapp,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev3>0.5)!=dtest$chd)
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp4<-glm(chd~ tobacco + ldl + adiposity + famhist + typea + obesity +  alcohol + age + tobacco:typea + tobacco:alcohol + ldl:famhist + adiposity:famhist + adiposity:obesity + adiposity:alcohol + famhist:alcohol + famhist:age + typea:alcohol,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev4<-predict(modelapp,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev4>0.5)!=dtest$chd)
library(pROC)
rocobj1 <- roc(dtest$chd, prev1)
rocobj2 <- roc(dtest$chd, prev2)
rocobj3 <- roc(dtest$chd, prev3)
rocobj4 <- roc(dtest$chd, prev4)
ggroc(list(modelbest=rocobj1, modellogit=rocobj2, modelbestinter=rocobj4, random=rocobj3))
l<-300
perm<-sample(nrow(SAheart))
# Echantillon d'apprentissage
dapp<-SAheart[perm[1:l],]
# Echantillon test
dtest<-SAheart[-perm[1:l],]
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp1<-glm(chd~tobacco + ldl + famhist
+ typea + age,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev1<-predict(modelapp1,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev1>0.5)!=dtest$chd)
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp2<-glm(chd~.,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev2<-predict(modelapp2,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev2>0.5)!=dtest$chd)
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp3<-glm(chd~1,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev3<-predict(modelapp3,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev3>0.5)!=dtest$chd)
# Estimation du modèle sur l'échantillon d'apprentissage
modelapp4<-glm(chd~ tobacco + ldl + adiposity + famhist + typea + obesity +  alcohol + age + tobacco:typea + tobacco:alcohol + ldl:famhist + adiposity:famhist + adiposity:obesity + adiposity:alcohol + famhist:alcohol + famhist:age + typea:alcohol,family=binomial,data=dapp)
# Prédictions sur l'échantillon test
prev4<-predict(modelapp4,newdata=dtest,
type="response")
# Calcul de la probabilité d'erreur
mean(as.numeric(prev4>0.5)!=dtest$chd)
library(pROC)
rocobj1 <- roc(dtest$chd, prev1)
rocobj2 <- roc(dtest$chd, prev2)
rocobj3 <- roc(dtest$chd, prev3)
rocobj4 <- roc(dtest$chd, prev4)
ggroc(list(modelbest=rocobj1, modellogit=rocobj2, modelbestinter=rocobj4, random=rocobj3))
library(pROC)
rocobj1 <- roc(dtest$chd, prev1)
rocobj2 <- roc(dtest$chd, prev2)
rocobj3 <- roc(dtest$chd, prev3)
rocobj4 <- roc(dtest$chd, prev4)
ggroc(list(modelbest=rocobj1, modellogit=rocobj2, modelbestinter=rocobj4, random=rocobj3))
library(pROC)
rocobj1 <- roc(dtest$chd, prev1)
rocobj2 <- roc(dtest$chd, prev2)
rocobj3 <- roc(dtest$chd, prev3)
rocobj4 <- roc(dtest$chd, prev4)
ggroc(list(modelbest=rocobj1, modellogit=rocobj2, modelbestinter=rocobj4, random=rocobj3))
library(pROC)
rocobj1 <- roc(dtest$chd, prev1)
rocobj2 <- roc(dtest$chd, prev2)
rocobj3 <- roc(dtest$chd, prev3)
rocobj4 <- roc(dtest$chd, prev4)
ggroc(list(modelbest=rocobj1, modellogit=rocobj2, modelbestinter=rocobj4, random=rocobj3))
library(pROC)
rocobj1 <- roc(dtest$chd, prev1)
rocobj2 <- roc(dtest$chd, prev2)
rocobj3 <- roc(dtest$chd, prev3)
rocobj4 <- roc(dtest$chd, prev4)
ggroc(list(modelbest=rocobj1, modellogit=rocobj2, modelbestinter=rocobj4, random=rocobj3))
rmarkdown::paged_table(data.frame(modelbest = round(auc(dtest$chd, prev1),4),
modellogit = round(auc(dtest$chd, prev2),4),
modelinter = round(auc(dtest$chd, prev4),4),
random = round(auc(dtest$chd, prev3),4)))
# Modèle retenu
modelbestinter = glm(formula = chd ~ tobacco + ldl + adiposity + famhist + typea +
obesity + alcohol + age + tobacco:typea + tobacco:alcohol +
ldl:famhist + adiposity:famhist + adiposity:obesity + adiposity:alcohol +
famhist:alcohol + famhist:age + typea:alcohol, family = binomial(link = "logit"),
data = SAheart)
summary(modelbestinter)
# A completer
fourmis <- read.table("Fourmis.txt")
# A completer
fourmis <- read.table("Fourmis.txt", sep = ",")
summary(fourmis)
head(fourmis)
head(fourmis)
fourmis$V1 <- as.factor(fourmis$V1)
fourmis$V1 <- as.factor(fourmis$V2)
head(fourmis)
# A completer
fourmis <- read.table("Fourmis.txt", sep = ",")
summary(fourmis)
head(fourmis)
fourmis$V1 <- as.factor(fourmis$V1)
fourmis$V2 <- as.factor(fourmis$V2)
head(fourmis)
quantitatives_fourmis <- sapply(fourmis, as.numeric)
boxplot(quantitatives_fourmis)
quantitatives_fourmis <- fourmis[sapply(fourmis, as.numeric)]
boxplot(quantitatives_fourmis)
quantitatives_fourmis <- fourmis[sapply(fourmis, is.numeric)]
boxplot(quantitatives_fourmis)
# A completer
fourmis <- read.table("Fourmis.txt", sep = ",")
summary(fourmis)
head(fourmis)
fourmis$V1 <- as.factor(fourmis$V1)
fourmis$V2 <- as.factor(fourmis$V2)
head(fourmis)
quantitatives_fourmis <- fourmis[sapply(fourmis, is.numeric)]
boxplot(quantitatives_fourmis)
quantitatives_fourmis <- fourmis[sapply(fourmis[1,:], is.numeric)]
quantitatives_fourmis <- fourmis[sapply(fourmis[1:], is.numeric)]
quantitatives_fourmis <- fourmis[sapply(fourmis, is.numeric)]
boxplot(quantitatives_fourmis)
# A COMPLETER
head(SAheart)
# A completer
fourmis <- read.table("Fourmis.txt", sep = ",")
fourmis <- as.data.frame(fourmis)
summary(fourmis)
head(fourmis)
fourmis$V1 <- as.factor(fourmis$V1)
fourmis$V2 <- as.factor(fourmis$V2)
head(fourmis)
quantitatives_fourmis <- fourmis[sapply(fourmis, is.numeric)]
boxplot(quantitatives_fourmis)
# A completer
fourmis <- read.table("Fourmis.txt", sep = ",")
fourmis <- as.data.frame(fourmis)
summary(fourmis)
head(fourmis)
# A completer
fourmis <- read.table("Fourmis.txt", sep = ",", header = T)
summary(fourmis)
head(fourmis)
fourmis$Effectifs <- as.factor(fourmis$Effectifs)
fourmis$Weight <- as.factor(fourmis$Weight)
head(fourmis)
quantitatives_fourmis <- fourmis[sapply(fourmis, is.numeric)]
boxplot(quantitatives_fourmis)
# A completer
fourmis <- read.table("Fourmis.txt", sep = ",", header = T)
summary(fourmis)
head(fourmis)
quantitatives_fourmis <- fourmis[sapply(fourmis, is.numeric)]
boxplot(quantitatives_fourmis)
# A completer
fourmis <- read.table("Fourmis.txt", sep = ",", header = T)
summary(fourmis)
head(fourmis)
fourmis$Site = as.factor(fourmis$Site)
fourmis$Conditions = as.factor(fourmis$Conditions)
summary(fourmis)
barplot(fourmis$Site)
barplot(fourmis)
ggplot(data = fourmis, aes(x=Site, y=Effectifs, col=Conditions)) + geom_boxplot()
modpois = glm(Effectifs~Site*Conditions, data=fourmis, family=poisson)
summary(modpois)
# A completer
fourmis <- read.table("Fourmis.txt", sep = ",", header = T)
summary(fourmis)
head(fourmis)
fourmis$Site = as.factor(fourmis$Site)
fourmis$Conditions = as.factor(fourmis$Conditions)
summary(fourmis)
quantitatives_fourmis <- fourmis[sapply(fourmis, is.numeric)]
boxplot(quantitatives_fourmis)
ggplot(data = fourmis, aes(x=Site, y=Effectifs, col=Conditions)) + geom_boxplot()
# A COMPLETER
anova(glm(Effectifs~Site+Conditions, data = fourmis, family=poisson), modpois, test = "Chisq"")
# A COMPLETER
anova(glm(Effectifs~Site+Conditions, data = fourmis, family=poisson), modpois, test = "Chisq")
# A COMPLETER
anova(glm(Effectifs~Site+Conditions, data = fourmis, family=poisson), modpois, test=Chisq)
# A COMPLETER
anova(glm(Effectifs~Site+Conditions, data = fourmis, family=poisson), modpois, test="Chisq")
newx = data.frame(Site=rep(levels(Fourmis$Site),2),Conditions=rep(levels(Fourmis$Conditions),each=4))
newx=data.frame(newx,lambdahat=predict(modpois,newdata=newx,type="response"))
newx
newx = data.frame(Site=rep(levels(Fourmis$Site),2),Conditions=rep(levels(Fourmis$Conditions),each=4))
newx = data.frame(Site=rep(levels(fourmis$Site),2),Conditions=rep(levels(fourmis$Conditions),each=4))
newx=data.frame(newx,lambdahat=predict(modpois,newdata=newx,type="response"))
newx
# A completer
Fourmis <- read.table("Fourmis.txt", sep = ",", header = T)
summary(Fourmis)
head(Fourmis)
Fourmis$Site = as.factor(Fourmis$Site)
Fourmis$Conditions = as.factor(Fourmis$Conditions)
summary(Fourmis)
quantitatives_Fourmis <- fourmis[sapply(Fourmis, is.numeric)]
boxplot(quantitatives_Fourmis)
ggplot(data = Fourmis, aes(x=Site, y=Effectifs, col=Conditions)) + geom_boxplot()
# A COMPLETER
anova(glm(Effectifs~Site+Conditions, data = Fourmis, family=poisson), modpois, test="Chisq")
modpois = glm(Effectifs~Site*Conditions, data=Fourmis, family=poisson)
summary(modpois)
# A COMPLETER
anova(glm(Effectifs~Site+Conditions, data = Fourmis, family=poisson), modpois, test="Chisq")
newx = data.frame(Site=rep(levels(Fourmis$Site),2),Conditions=rep(levels(Fourmis$Conditions),each=4))
newx=data.frame(newx,lambdahat=predict(modpois,newdata=newx,type="response"))
newx
glmInt = glm(Effectifs~Site*Conditions,offset=log(Weight),family="poisson", data=Fourmis )
summary(glmInt)
# A COMPLETER
newx = data.frame(Site=rep(levels(Fourmis$Site),2),Conditions=rep(levels(Fourmis$Conditions),each=4))
newx=data.frame(newx,lambdahat=predict(glmInt,newdata=newx,type="response"))
newx
# A COMPLETER
newx = data.frame(Site=rep(levels(Fourmis$Site),2),Conditions=rep(levels(Fourmis$Conditions),each=4),Weight=rep(1,8))
newx=data.frame(newx,lambdahat=predict(glmInt,newdata=newx,type="response"))
newx
# A Completer
newx = data.frame(Site=rep(levels(Fourmis$Site),2),Conditions=rep(levels(Fourmis$Conditions),each=4),Weight=rep(10,8))
newx=data.frame(newx,lambdahat=predict(glmInt,newdata=newx,type="response"))
newx
modbinneg=glm(Effectifs~Site*Conditions,offset=log(Weight),family=quasipoisson(link="log"), data=Fourmis )
summary(modbinneg)
modbinneg=glm(Effectifs~Site*Conditions,offset=log(Weight),family=quasipoisson(link="log"), data=Fourmis )
summary(modbinneg)
modnb=glm.nb(Effectifs~Site*Conditions + offset(lnweight),data=FourmisBis,init.theta = 14.82825309, link = log)
summary(modnb)
#modnb=glm.nb(Effectifs~Site*Conditions + offset(lnweight),data=FourmisBis,init.theta = 14.82825309, link = log)
modnb=glm.nb(Effectifs~Site*Conditions, offset = log(Weight), data=FourmisBis, link = log)
#modnb=glm.nb(Effectifs~Site*Conditions + offset(lnweight),data=FourmisBis,init.theta = 14.82825309, link = log)
modnb=glm.nb(Effectifs~Site*Conditions, offset = log(Weight), data=Fourmis, link = log)
#modnb=glm.nb(Effectifs~Site*Conditions + offset(lnweight),data=FourmisBis,init.theta = 14.82825309, link = log)
modnb=glm.nb(Effectifs~Site*Conditions, offset = log(weight), data=Fourmis, link = log)
#modnb=glm.nb(Effectifs~Site*Conditions + offset(lnweight),data=FourmisBis,init.theta = 14.82825309, link = log)
modnb=glm.nb(Effectifs~Site*Conditions, offset = ln(Weight), data=Fourmis, link = log)
hypertension<-read.table("hypertension.txt",header=T,colClasses=rep("factor",10))
summary(hypertension)
hypertension<-read.table("hypertension.txt",header=T,colClasses=rep("factor",10))
summary(hypertension)
# A COMPLETER
# Tableau de fréquence de la variable qualitative "Groupe"
table_hypertension <- table(hypertension)
# Barplot pour la variable qualitative "Groupe"
barplot(table_hypertension, main = "Répartition par Groupe", xlab = "Groupe", ylab = "Fréquence", col = "skyblue")
modelnonord <-vglm(niveau ~ ., data = hypertension, family = multinomial)
summary(modelnonord)
# A COMPLETER
head(hypertension)
# transformation en variable ordinale
hypertension$niveau = factor(hypertension$niveau, order = TRUE, levels = c("1", "2", "3","4"))
# ajustement du modèle
modelord <- vglm(niveau ~ ., data = hypertension, family = acat())
summary(modelord)

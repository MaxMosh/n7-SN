prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
class.source="badCode")
opts_knit$set(width=75)
library(mclust)
library(clusterSim)
library(factoextra)
library(FactoMineR)
library(ggplot2)
library(reshape2)
library(circlize)
library(viridis)
wine<-read.table("wine.txt",header=T)
wine$Qualite = as.factor(wine$Qualite)
wine$Type = factor(wine$Type, labels = c("blanc", "rouge"))
wineinit<-wine
wine[,-c(1,2)]<-scale(wine[,-c(1,2)],center=T,scale=T)
head(wine)
resacp<-PCA(wine,quali.sup=c(1,2), scale.unit = TRUE,graph=FALSE)
fviz_pca_ind(resacp,geom=c("point"),habillage=2)
# A COMPLETER : FAIT
d <- dist(wine, method = "euclidean")
hclustsingle<-hclust(d, method = "single",members = NULL)
hclustcomplete<-hclust(d, method = "complete",members = NULL)
hclustaverage<-hclust(d, method = "average",members = NULL)
# Dendrogramme
plot(hclustsingle,hang=-1,labels=FALSE)
plot(hclustcomplete,hang=-1,labels=FALSE)
plot(hclustaverage,hang=-1,labels=FALSE)
fviz_dend(hclustsingle,show_labels=FALSE)
fviz_dend(hclustcomplete,show_labels=FALSE)
fviz_dend(hclustaverage,show_labels=FALSE)
# A COMPLETER
ClassK3 = cutree(hclustcomplete, k = 3)
fviz_dend(hclustcomplete, k = 3)
Data_CAH = Data_final[,4:14]
d=dist(Data_CAH, method = "euclidean")
hc=hclust(d,method="single")
#ggdendogram(hc)
classK5 <- cutree(hc, k = 5)
fviz_dend(hc, k=5, show_labels=FALSE)
Data_CAH = Data_final[,4:14]
d=dist(Data_CAH, method = "euclidean")
hc=hclust(d,method="complete")
#ggdendogram(hc)
fviz_dend(hc, k = 5, show_labels=FALSE)
df<-data.frame(wine[,-c(1,2)],Class=as.factor(ClassK3))
df<-melt(df,id="Class")
ggplot(df,aes(x=variable,y=value))+geom_violin(aes(fill=Class))
# A COMPLETER : FAIT
dward <- dist(wine, method = "euclidean")
hward<-hclust(dward, method = "ward.D2",members = NULL)
fviz_dend(hward,show_labels=FALSE)
# A completer : FAIT
CH<-NULL
Kmax<-20
for (k in 2:Kmax){
CH<-c(CH,index.G1(wine[, -c(1,2)],cutree(hward,k)))
}
daux<-data.frame(NbClust=2:Kmax,CH=CH)
ggplot(daux,aes(x=NbClust,y=CH))+geom_line()+geom_point()
Data_CAH = Data_final[,4:14]
# A completer : FAIT
CH<-NULL
Kmax<-20
for (k in 2:Kmax){
CH<-c(CH,index.G1(Data_CAH,cutree(hc,k)))
}
daux<-data.frame(NbClust=2:Kmax,CH=CH)
ggplot(daux,aes(x=NbClust,y=CH))+geom_line()+geom_point()
ClustCH<-cutree(hward,which.max(CH)+1)
fviz_dend(hward,show_labels = FALSE,k=which.max(CH)+1)
ClustCH<-cutree(hward,which.max(CH)+1)
fviz_dend(hward,show_labels = FALSE,k=which.max(CH)+1)
ClustCH<-cutree(hc,which.max(CH)+1)
fviz_dend(hc,show_labels = FALSE,k=which.max(CH)+1)
fviz_cluster(hc,Data_CAH,ellipse.type="norm",labelsize=8,geom=c("point"),axes=c(1,2)) + ggtitle("")
table(hc)
table(hc$order)
fviz_pca_ind(resacp,geom = c("point"),habillage=as.factor(ClustCH))
# A completer : FAIT
CH<-NULL
Kmax<-20
for (k in 2:Kmax){
CH<-c(CH,index.S(dward,cutree(hward,k)))
}
daux<-data.frame(NbClust=2:Kmax,CH=CH)
ggplot(daux,aes(x=NbClust,y=CH))+geom_line()+geom_point()
Data_CAH = scale(Data_final[,4:14])
# A completer : FAIT
CH<-NULL
Kmax<-20
for (k in 2:Kmax){
CH<-c(CH,index.G1(Data_CAH,cutree(hc,k)))
}
daux<-data.frame(NbClust=2:Kmax,CH=CH)
ggplot(daux,aes(x=NbClust,y=CH))+geom_line()+geom_point()
ClustCH<-cutree(hc,which.max(CH)+1)
fviz_dend(hc,show_labels = FALSE,k=which.max(CH)+1)
Data_CAH = Data_final[,4:14]
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
head(Data_mlg)
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
mlg_si = glm(dep_met_1000~., data=Data_mlg, family=binomial(link = "logit"))
anova(mlg_complet, mlg_si, test="Chisq")
step.backward <- step(mlg_complet)
stepAIC(mlg_complet, direction=c("backward"),p=2,trace=0) # AIC
stepAIC(mlg_complet, direction=c("backward"),p=log(nrow(Data_mlg))) # BIC
mlg_reduit = glm(formula = dep_met_1000 ~ annee_inv + nh3_kg + n2o_t + TypeEPCI +
nh3_kg:n2o_t + nh3_kg:TypeEPCI + n2o_t:TypeEPCI, family = binomial(link = "logit"),
data = Data_mlg)
anova(mlg_reduit, mlg_complet, test = "Chisq")
pseudoR2 = 1 - mlg_reduit$deviance/mlg_reduit$null.deviance
pseudoR2
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
Data_mlg <- scale(Data_mlg[,1:4])
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
#Data_mlg <- scale(Data_mlg[,1:4])
head(Data_mlg)
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
mlg_si = glm(dep_met_1000~., data=Data_mlg, family=binomial(link = "logit"))
anova(mlg_complet, mlg_si, test="Chisq")
step.backward <- step(mlg_complet)
stepAIC(mlg_complet, direction=c("backward"),p=2,trace=0) # AIC
stepAIC(mlg_complet, direction=c("backward"),p=log(nrow(Data_mlg))) # BIC
summary(step.backward <- step(mlg_complet))
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
Data_mlg <- scale(Data_mlg[,1:4])
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
Data_mlg <- scale(Data_mlg[,2:4])
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
#Data_mlg <- scale(Data_mlg[,1:4])
head(Data_mlg)
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
Data_mlg <- scale(Data_mlg[,2:3])
head(Data_mlg)
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
Data_mlg[,2:3] = scale(Data_mlg[,2:3])
head(Data_mlg)
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
mlg_si = glm(dep_met_1000~., data=Data_mlg, family=binomial(link = "logit"))
anova(mlg_complet, mlg_si, test="Chisq")
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
#Data_mlg[,2:3] = scale(Data_mlg[,2:3])
head(Data_mlg)
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
mlg_si = glm(dep_met_1000~., data=Data_mlg, family=binomial(link = "logit"))
anova(mlg_complet, mlg_si, test="Chisq")
summary(step.backward <- step(mlg_complet))
step.backward <- step(mlg_complet)
stepAIC(mlg_complet, direction=c("backward"),p=2,trace=0) # AIC
stepAIC(mlg_complet, direction=c("backward"),p=log(nrow(Data_mlg))) # BIC
mlg_reduit = glm(formula = dep_met_1000 ~ annee_inv + nh3_kg + n2o_t + TypeEPCI +
nh3_kg:n2o_t + nh3_kg:TypeEPCI + n2o_t:TypeEPCI, family = binomial(link = "logit"),
data = Data_mlg)
anova(mlg_reduit, mlg_complet, test = "Chisq")
pseudoR2 = 1 - mlg_reduit$deviance/mlg_reduit$null.deviance
pseudoR2
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
Data_mlg[,2:3] = scale(Data_mlg[,2:3])
head(Data_mlg)
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
mlg_si = glm(dep_met_1000~., data=Data_mlg, family=binomial(link = "logit"))
anova(mlg_complet, mlg_si, test="Chisq")
step.backward <- step(mlg_complet)
stepAIC(mlg_complet, direction=c("backward"),p=2,trace=0) # AIC
stepAIC(mlg_complet, direction=c("backward"),p=log(nrow(Data_mlg))) # BIC
mlg_reduit = glm(formula = dep_met_1000 ~ annee_inv + nh3_kg + n2o_t + TypeEPCI +
nh3_kg:n2o_t + nh3_kg:TypeEPCI + n2o_t:TypeEPCI, family = binomial(link = "logit"),
data = Data_mlg)
anova(mlg_reduit, mlg_complet, test = "Chisq")
pseudoR2 = 1 - mlg_reduit$deviance/mlg_reduit$null.deviance
pseudoR2
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
#Data_mlg[,2:3] = scale(Data_mlg[,2:3])
head(Data_mlg)
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
#Data_mlg[,2:3] = scale(Data_mlg[,2:3])
head(Data_mlg)
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
Data_mlg[,2:3] = scale(Data_mlg[,2:3])
head(Data_mlg)
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
#Data_mlg[,2:3] = scale(Data_mlg[,2:3])
head(Data_mlg)
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
mlg_si = glm(dep_met_1000~., data=Data_mlg, family=binomial(link = "logit"))
anova(mlg_complet, mlg_si, test="Chisq")
step.backward <- step(mlg_complet)
stepAIC(mlg_complet, direction=c("backward"),p=2,trace=0) # AIC
stepAIC(mlg_complet, direction=c("backward"),p=log(nrow(Data_mlg))) # BIC
mlg_reduit = glm(formula = dep_met_1000 ~ annee_inv + nh3_kg + n2o_t + TypeEPCI +
nh3_kg:n2o_t + nh3_kg:TypeEPCI + n2o_t:TypeEPCI, family = binomial(link = "logit"),
data = Data_mlg)
anova(mlg_reduit, mlg_complet, test = "Chisq")
pseudoR2 = 1 - mlg_reduit$deviance/mlg_reduit$null.deviance
pseudoR2
knitr::opts_chunk$set(echo = TRUE)
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
levels(Datalog_[c(3,10,12, 14,15)]$TypeEPCI) <- c("CA/CU/Métropole", "CC", "CA/CU/Métropole", "CA/CU/Métropole")
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Data$TypeEPCI=as.factor(Data$TypeEPCI)
Data$annee_inv=as.factor(Data$annee_inv)
Data$nomdepart=as.factor(Data$nomdepart)
Data$lib_epci=as.factor(Data$lib_epci)
Data$Ardèche = as.factor(Data$Ardèche)
Data$Ariège = as.factor(Data$Ariège)
Data$Aude = as.factor(Data$Aude)
Data$Aveyron = as.factor(Data$Aveyron)
Data$Gard = as.factor(Data$Gard)
Data$Haute.Garonne = as.factor(Data$Haute.Garonne)
Data$Gers = as.factor(Data$Gers)
Data$Hérault = as.factor(Data$Hérault)
Data$Landes = as.factor(Data$Landes)
Data$Lot = as.factor(Data$Lot)
Data$Lot.et.Garonne = as.factor(Data$Lot.et.Garonne)
Data$Lozère = as.factor(Data$Lozère)
Data$Pyrénées.Atlantiques = as.factor(Data$Pyrénées.Atlantiques)
Data$Hautes.Pyrénées = as.factor(Data$Hautes.Pyrénées)
Data$Pyrénées.Orientales = as.factor(Data$Pyrénées.Orientales)
Data$Tarn = as.factor(Data$Tarn)
Data$Tarn.et.Garonne = as.factor(Data$Tarn.et.Garonne)
Data$Vaucluse = as.factor(Data$Vaucluse)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
levels(Datalog_[c(3,10,12, 14,15)]$TypeEPCI) <- c("CA/CU/Métropole", "CC", "CA/CU/Métropole", "CA/CU/Métropole")
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
#Data_mlg[,2:3] = scale(Data_mlg[,2:3])
head(Data_mlg)
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
mlg_si = glm(dep_met_1000~., data=Data_mlg, family=binomial(link = "logit"))
anova(mlg_complet, mlg_si, test="Chisq")
step.backward <- step(mlg_complet)
stepAIC(mlg_complet, direction=c("backward"),p=2,trace=0) # AIC
stepAIC(mlg_complet, direction=c("backward"),p=log(nrow(Data_mlg))) # BIC
anova(mlg_reduit, mlg_complet, test = "Chisq")
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Data$TypeEPCI=as.factor(Data$TypeEPCI)
Data$annee_inv=as.factor(Data$annee_inv)
Data$nomdepart=as.factor(Data$nomdepart)
Data$lib_epci=as.factor(Data$lib_epci)
Data$Ardèche = as.factor(Data$Ardèche)
Data$Ariège = as.factor(Data$Ariège)
Data$Aude = as.factor(Data$Aude)
Data$Aveyron = as.factor(Data$Aveyron)
Data$Gard = as.factor(Data$Gard)
Data$Haute.Garonne = as.factor(Data$Haute.Garonne)
Data$Gers = as.factor(Data$Gers)
Data$Hérault = as.factor(Data$Hérault)
Data$Landes = as.factor(Data$Landes)
Data$Lot = as.factor(Data$Lot)
Data$Lot.et.Garonne = as.factor(Data$Lot.et.Garonne)
Data$Lozère = as.factor(Data$Lozère)
Data$Pyrénées.Atlantiques = as.factor(Data$Pyrénées.Atlantiques)
Data$Hautes.Pyrénées = as.factor(Data$Hautes.Pyrénées)
Data$Pyrénées.Orientales = as.factor(Data$Pyrénées.Orientales)
Data$Tarn = as.factor(Data$Tarn)
Data$Tarn.et.Garonne = as.factor(Data$Tarn.et.Garonne)
Data$Vaucluse = as.factor(Data$Vaucluse)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
levels(Datalog_[c(3,10,12, 14,15)]$TypeEPCI) <- c("CA/CU/Métropole", "CC", "CA/CU/Métropole", "CA/CU/Métropole")
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
#Data_mlg[,2:3] = scale(Data_mlg[,2:3])
head(Data_mlg)
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
mlg_si = glm(dep_met_1000~., data=Data_mlg, family=binomial(link = "logit"))
anova(mlg_complet, mlg_si, test="Chisq")
step.backward <- step(mlg_complet)
stepAIC(mlg_complet, direction=c("backward"),p=2,trace=0) # AIC
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
stepAIC(mlg_complet, direction=c("backward"),p=2,trace=0) # AIC
library(corrplot)
#library(tidyverse)
library(gridExtra)
library(reshape2)
library(ggplot2)
library(FactoMineR)
library(leaps)
library(bestglm)
library(mclust)
library(cluster)
library(factoextra)
library(FactoMineR)
library(ppclust)
library(reticulate)
library(ggplot2)
library(reshape)
library(corrplot)
library(gridExtra)
library(circlize)
library(viridis)
library(reshape2)
library(klaR)
library(MASS)
# REDÉ
Data = read.csv("Data-projetmodIA-2324.csv", header = TRUE)
Data$TypeEPCI=as.factor(Data$TypeEPCI)
Data$annee_inv=as.factor(Data$annee_inv)
Data$nomdepart=as.factor(Data$nomdepart)
Data$lib_epci=as.factor(Data$lib_epci)
Data$Ardèche = as.factor(Data$Ardèche)
Data$Ariège = as.factor(Data$Ariège)
Data$Aude = as.factor(Data$Aude)
Data$Aveyron = as.factor(Data$Aveyron)
Data$Gard = as.factor(Data$Gard)
Data$Haute.Garonne = as.factor(Data$Haute.Garonne)
Data$Gers = as.factor(Data$Gers)
Data$Hérault = as.factor(Data$Hérault)
Data$Landes = as.factor(Data$Landes)
Data$Lot = as.factor(Data$Lot)
Data$Lot.et.Garonne = as.factor(Data$Lot.et.Garonne)
Data$Lozère = as.factor(Data$Lozère)
Data$Pyrénées.Atlantiques = as.factor(Data$Pyrénées.Atlantiques)
Data$Hautes.Pyrénées = as.factor(Data$Hautes.Pyrénées)
Data$Pyrénées.Orientales = as.factor(Data$Pyrénées.Orientales)
Data$Tarn = as.factor(Data$Tarn)
Data$Tarn.et.Garonne = as.factor(Data$Tarn.et.Garonne)
Data$Vaucluse = as.factor(Data$Vaucluse)
Datalog = Data
Datalog[,4:14] = log(Datalog[,4:14])
Datalog_ = Datalog
levels(Datalog_[c(3,10,12, 14,15)]$TypeEPCI) <- c("CA/CU/Métropole", "CC", "CA/CU/Métropole", "CA/CU/Métropole")
Data_final <- subset(Datalog_, lib_epci != "Toulouse Métropole")
Data_final <- subset(Data_final, lib_epci != "CC Pays de Nay")
Data_mlg = Data_final[c(3,10,12,14,15)]
# Création d'une nouvelle variable qualitative (celle qui traduit méthane > 1000t)
Data_mlg$dep_met_1000 <- as.logical(Data_mlg$ch4_t>log(1000))
# Retrait de la variable quantitative ch4_t
Data_mlg <- Data_mlg[c(1,2,4,5,6)]
#Data_mlg[,2:3] = scale(Data_mlg[,2:3])
head(Data_mlg)
mlg_complet = glm(dep_met_1000~(.)^2, data=Data_mlg, family=binomial(link = "logit"))
mlg_si = glm(dep_met_1000~., data=Data_mlg, family=binomial(link = "logit"))
anova(mlg_complet, mlg_si, test="Chisq")
step.backward <- step(mlg_complet)
stepAIC(mlg_complet, direction=c("backward"),p=2,trace=0) # AIC
stepAIC(mlg_complet, direction=c("backward"),p=log(nrow(Data_mlg))) # BIC
mlg_reduit = glm(formula = dep_met_1000 ~ annee_inv + nh3_kg + n2o_t + TypeEPCI +
nh3_kg:n2o_t + nh3_kg:TypeEPCI + n2o_t:TypeEPCI, family = binomial(link = "logit"),
data = Data_mlg)
anova(mlg_reduit, mlg_complet, test = "Chisq")
pseudoR2 = 1 - mlg_reduit$deviance/mlg_reduit$null.deviance
pseudoR2
stepAIC(mlg_complet, direction=c("backward"),p=2,trace=0) # AIC
stepAIC(mlg_complet, direction=c("backward"),p=log(nrow(Data_mlg))) # BIC

# A COMPLETER
help("silhouette")
Silhou<-NULL
for (k in 2:Kmax){
# NE MARCHE PAS
aux<-silhouette(reskmeanscl[,k-1],daisy(wine[,-c(1,2)]))
Silhou<-c(Silhou,mean(aux[,3]))
#
}
df<-data.frame(K=2:Kmax,Silhouette=Silhou)
ggplot(df,aes(x=K,y=Silhouette))+
geom_point()+
geom_line()+theme(legend.position = "bottom")
aux<-silhouette(reskmeanscl[,k-1],daisy(wine[,-c(1,2)]))
fviz_silhouette(aux)+theme(plot.title = element_text(size =9))
rm(df,Silhou,aux)
# A COMPLETER
resPAM<-pam(wine[,-c(1,2)],3,metric = "euclidean")
resPAM$medoids
resPAM$id.med
fviz_cluster(resPAM,data=wine[,-c(1,2)],ellipse.type="norm",labelsize=8,geom=c("point"))+ggtitle("")
fviz_pca_ind(resacp,col.ind=as.factor(resPAM$clustering),geom = c("point"),axes=c(1,2))
# A COMPLETER
resPAM<-pam(wine[,-c(1,2)],3,metric = "euclidean")
resPAM$medoids
resPAM$id.med
fviz_cluster(resPAM,data=wine[,-c(1,2)],ellipse.type="norm",labelsize=8,geom=c("point"))+ggtitle("")
#fviz_pca_ind(resacp,col.ind=as.factor(resPAM$clustering),geom = c("point"),axes=c(1,2))
summary(resPAM)
adjustedRandIndex(resPAM$clustering,wine$Type)
table(resPAM$clustering,wine$Type)
adjustedRandIndex(resPAM$clustering,wine$Qualite)
table(resPAM$clustering,wine$Qualite)
# A completer
Kmax<-15
resPAMcl<-matrix(0,nrow=nrow(wine),ncol=Kmax-1)
Silhou<-NULL
for (k in 2:Kmax){
resaux<-pam(wine[,-c(1,2)],k,metric = "euclidean")
resPAMcl[,k-1]<-resaux$clustering
aux<-silhouette(resPAMcl[,k-1], daisy(wine[,-c(1,2)]))
Silhou<-c(Silhou,mean(aux[,3]))
}
df<-data.frame(K=2:Kmax,Silhouette=Silhou)
ggplot(df,aes(x=K,y=Silhouette))+
geom_point()+
geom_line()+theme(legend.position = "bottom")
aux<-silhouette(resPAMcl[,1], daisy(wine[,-c(1:2)]))
fviz_silhouette(aux)+theme(plot.title = element_text(size =9))
adjustedRandIndex(resPAMcl[,1],reskmeanscl[,1])
table(resPAMcl[,1],reskmeanscl[,3])
# A COMPLETER
library(ppclust)
resfcm<-fcm(wine[,-c(1,2)],centers=3,m=2)
table(apply(resfcm$u,1,which.max))
table(resfcm$cluster)
boxplot(apply(resfcm$u,1,max)~apply(resfcm$u,1,which.max))
# A COMPLETER
fviz_pca_ind(acp_wine,axes=c(1,2),geom=c("point"),col.ind=apply(resfcm$u,1,max))+
scale_color_gradient2(low="white", mid="blue",high="red", midpoint=0.8, space = "Lab")
zoo<- read.table("zoo-dataTP.txt")
# A COMPLETER
str(zoo)
summary(zoo)
res.mca<-MCA(zoo, graph = FALSE)
zoo<- read.table("zoo-dataTP.txt",header=T,stringsAsFactors = TRUE)
# A COMPLETER
str(zoo)
summary(zoo)
zoo<- read.table("zoo-dataTP.txt",header=T)
for (j in 1:ncol(zoo))
zoo[,j] <- as.factor(zoo[,j])
str(zoo)
summary(zoo)
zoo<- read.table("zoo-dataTP.txt",header=T)
for (j in 1:ncol(zoo))
zoo[,j] <- as.factor(zoo[,j])
summary(zoo)
res.mca<-MCA(zoo, graph = FALSE)
# A COMPLETER
fviz_pca_ind(res.mca, axes = c(1, 2), habillage = wine$Type, geom = c("point"), palette = c("royalblue", "red3"))
fviz_mca(res.mca, axes = c(1, 2), habillage = wine$Type, geom = c("point"), palette = c("royalblue", "red3"))
fviz_mca(res.mca, axes = c(1, 2), habillage = wine$Type, geom = c("point"), palette = c("royalblue", "red3"))
fviz_mca(res.mca, axes = c(1, 2), geom = c("point"), palette = c("royalblue", "red3"))
summary(res.mca)
fviz_mca(res.mca, axes = c(1, 2), geom = c("point"), palette = c("royalblue", "red3"))
fviz_mca(res.mca, axes = c(2, 3), geom = c("point"), palette = c("royalblue", "red3"))
fviz_mca(res.mca, axes = c(1, 2, 3), geom = c("point"), palette = c("royalblue", "red3"))
fviz_mca(res.mca, axes = c(1, 2), geom = c("point"), palette = c("royalblue", "red3"))
fviz_mca(res.mca, axes = c(1, 2), habillage = 4)
fviz_contrib(res.mca, choice = "var", axes = 1)
barplotClus(reskmodes)
reskmodes<-kmodes(zoo[,-c(1,2)], modes = 4)
barplotClus(reskmodes)
reskmodes<-kmodes(zoo[,-c(1,2)], modes = 5)
barplotClus(reskmodes)
reskmodes<-kmodes(zoo[,-c(1,2)], modes = 6)
barplotClus(reskmodes)
# J indice des variables
# Data = jeu de données
# clust = clustering étudié
# output : graphe par variable dans J donnant la répartition des modalités de J par classe de clust
barplotClus <- function(clust, Data, J) {
aux.long.p <- heatm(clust, Data, J)$freq
# ux<-unique(aux.long.p$variable)
for (j in J) {
p <- ggplot(aux.long.p[which(aux.long.p$variable == colnames(Data)[j]), ],
aes(x = clust, y = perc, fill = value)) + geom_bar(stat = "identity")+
labs(fill = colnames(Data)[j])
print(p)
}
}
heatm <- function(clust, Data, J) {
library(dplyr)
Dataaux <- data.frame(id.s = c(1:nrow(Data)), Data)
aux <- cbind(Dataaux, clust)
aux.long <- melt(data.frame(lapply(aux, as.character)), stringsAsFactors = FALSE,
id = c("id.s", "clust"), factorsAsStrings = T)
# Effectifs
aux.long.q <- aux.long %>%
group_by(clust, variable, value) %>%
mutate(count = n_distinct(id.s)) %>%
distinct(clust, variable, value, count)
# avec fréquences
aux.long.p <- aux.long.q %>%
group_by(clust, variable) %>%
mutate(perc = count/sum(count)) %>%
arrange(clust)
Lev <- NULL
for (j in 1:ncol(Data)) Lev <- c(Lev, levels(Data[, j]))
Jaux <- NULL
for (j in 1:length(J)) {
Jaux <- c(Jaux, which(aux.long.p$variable == colnames(Data)[J[j]]))
}
gaux <- ggplot(aux.long.p[Jaux, ], aes(x = clust, y = value)) + geom_tile(aes(fill = perc)) +
scale_fill_gradient2(low = "white", mid = "blue", high = "red") + theme_minimal()
return(list(gaux = gaux, eff = aux.long.q, freq = aux.long.p))
}
library(klaR)
reskmodes<-kmodes(zoo[,-c(1,2)], modes = 6)
barplotClus(reskmodes)
library(knitr)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=FALSE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
class.source="badCode")
opts_knit$set(width=75)
library(mclust)
library(cluster)
library(factoextra)
library(FactoMineR)
library(ppclust)
library(reticulate)
library(ggplot2)
library(reshape)
library(corrplot)
library(gridExtra)
library(circlize)
library(viridis)
library(reshape2)
library(klaR)
# J indice des variables
# Data = jeu de données
# clust = clustering étudié
# output : graphe par variable dans J donnant la répartition des modalités de J par classe de clust
barplotClus <- function(clust, Data, J) {
aux.long.p <- heatm(clust, Data, J)$freq
# ux<-unique(aux.long.p$variable)
for (j in J) {
p <- ggplot(aux.long.p[which(aux.long.p$variable == colnames(Data)[j]), ],
aes(x = clust, y = perc, fill = value)) + geom_bar(stat = "identity")+
labs(fill = colnames(Data)[j])
print(p)
}
}
heatm <- function(clust, Data, J) {
library(dplyr)
Dataaux <- data.frame(id.s = c(1:nrow(Data)), Data)
aux <- cbind(Dataaux, clust)
aux.long <- melt(data.frame(lapply(aux, as.character)), stringsAsFactors = FALSE,
id = c("id.s", "clust"), factorsAsStrings = T)
# Effectifs
aux.long.q <- aux.long %>%
group_by(clust, variable, value) %>%
mutate(count = n_distinct(id.s)) %>%
distinct(clust, variable, value, count)
# avec fréquences
aux.long.p <- aux.long.q %>%
group_by(clust, variable) %>%
mutate(perc = count/sum(count)) %>%
arrange(clust)
Lev <- NULL
for (j in 1:ncol(Data)) Lev <- c(Lev, levels(Data[, j]))
Jaux <- NULL
for (j in 1:length(J)) {
Jaux <- c(Jaux, which(aux.long.p$variable == colnames(Data)[J[j]]))
}
gaux <- ggplot(aux.long.p[Jaux, ], aes(x = clust, y = value)) + geom_tile(aes(fill = perc)) +
scale_fill_gradient2(low = "white", mid = "blue", high = "red") + theme_minimal()
return(list(gaux = gaux, eff = aux.long.q, freq = aux.long.p))
}
library(klaR)
reskmodes<-kmodes(zoo[,-c(1,2)], modes = 6)
barplotClus(reskmodes,zoo,6)
barplotClus(reskmodes$cluster,zoo,6)
barplotClus(reskmodes$cluster,zoo,2)
barplotClus(reskmodes$cluster,zoo,3)
barplotClus(reskmodes$cluster,zoo,6)
barplotClus(reskmodes$cluster,zoo,J = c(1:16))
help(WithinDiff)
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$withindiff)
Clust[,k]<-aux$cluster
}
help(WithinDiff)
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$withindiff)
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$withindiff)
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
WithinDiff<-c(WithinDiff,aux$top.withindiff)
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$top.withindiff)
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$tot.withindiff)
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$tot.withindiff[k])
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$tot.withindiff[,k])
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
WithinDiff<-c(WithinDiff,aux$withindiff[k])
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$withindiff[k])
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$withindiff[k])
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$withindiff[k])
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$withindiff[k])
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$withindiff[k])
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,aux$withindiff[k])
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,sum(aux$withindiff)
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,sum(aux$withindiff))
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,sum(aux$withindiff))
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
WithinDiff<-NULL
Kmax<-10
Clust<-matrix(0,nrow=nrow(zoo),ncol=Kmax)
for (k in 1:Kmax){
aux<-kmodes(zoo[,-c(1,2)], modes = k)
WithinDiff<-c(WithinDiff,sum(aux$withindiff))
Clust[,k]<-aux$cluster
}
auxdf<-data.frame(NbCluster=1:Kmax,WithinDiff=WithinDiff)
ggplot(auxdf,aes(x=NbCluster,y=WithinDiff))+geom_point()+
geom_line()
# A COMPLETER
Kmax<-15
reskmeanscl_acm<-matrix(0,nrow=nrow(wine),ncol=Kmax-1)
Iintra<-NULL
for (k in 2:Kmax){
resaux<-kmeans(wine[, -c(1,2)], k)
reskmeanscl_acm[,k-1]<-resaux$cluster
Iintra<-c(Iintra,resaux$tot.withinss)
}
df<-data.frame(K=2:15,Iintra=Iintra)
ggplot(df,aes(x=K,y=Iintra))+geom_line()+geom_point()+xlab("Nombre de classes")+ylab("Inertie intraclasse")
# A COMPLETER
Kmax<-15
reskmeanscl_acm<-matrix(0,nrow=nrow(res.mca),ncol=Kmax-1)
Iintra<-NULL
for (k in 2:Kmax){
resaux<-kmeans(res.mca[, -c(1,2)], k)
reskmeanscl_acm[,k-1]<-resaux$cluster
Iintra<-c(Iintra,resaux$tot.withinss)
}
df<-data.frame(K=2:15,Iintra=Iintra)
ggplot(df,aes(x=K,y=Iintra))+geom_line()+geom_point()+xlab("Nombre de classes")+ylab("Inertie intraclasse")
# A COMPLETER
Kmax<-15
reskmeanscl_acm<-matrix(0,nrow=nrow(res.mca),ncol=Kmax-1)
Iintra<-NULL
for (k in 2:Kmax){
resaux<-kmeans(res.mca$ind[, -c(1,2)], k)
reskmeanscl_acm[,k-1]<-resaux$cluster
Iintra<-c(Iintra,resaux$tot.withinss)
}
df<-data.frame(K=2:15,Iintra=Iintra)
ggplot(df,aes(x=K,y=Iintra))+geom_line()+geom_point()+xlab("Nombre de classes")+ylab("Inertie intraclasse")
# A COMPLETER
Kmax<-15
reskmeanscl_acm<-matrix(0,nrow=nrow(res.mca$ind),ncol=Kmax-1)
Iintra<-NULL
for (k in 2:Kmax){
resaux<-kmeans(res.mca$ind[, -c(1,2)], k)
reskmeanscl_acm[,k-1]<-resaux$cluster
Iintra<-c(Iintra,resaux$tot.withinss)
}
df<-data.frame(K=2:15,Iintra=Iintra)
ggplot(df,aes(x=K,y=Iintra))+geom_line()+geom_point()+xlab("Nombre de classes")+ylab("Inertie intraclasse")
# A COMPLETER
Kmax<-15
reskmeanscl_acm<-matrix(0,nrow=nrow(res.mca),ncol=Kmax-1)
Iintra<-NULL
for (k in 2:Kmax){
resaux<-kmeans(res.mca$ind[, -c(1,2)], k)
reskmeanscl_acm[,k-1]<-resaux$cluster
Iintra<-c(Iintra,resaux$tot.withinss)
}
df<-data.frame(K=2:15,Iintra=Iintra)
ggplot(df,aes(x=K,y=Iintra))+geom_line()+geom_point()+xlab("Nombre de classes")+ylab("Inertie intraclasse")
# A COMPLETER
Kmax<-15
reskmeanscl_acm<-matrix(0,nrow=nrow(res.mca),ncol=Kmax-1)
Iintra<-NULL
for (k in 2:Kmax){
resaux<-kmeans(res.mca$ind[, -c(1,2)], k)
reskmeanscl_acm[,k-1]<-resaux$cluster
Iintra<-c(Iintra,resaux$tot.withinss)
}
df<-data.frame(K=2:15,Iintra=Iintra)
ggplot(df,aes(x=K,y=Iintra))+geom_line()+geom_point()+xlab("Nombre de classes")+ylab("Inertie intraclasse")
# A COMPLETER
Kmax<-15
reskmeanscl_acm<-matrix(0,nrow=nrow$ind(res.mca),ncol=Kmax-1)
Iintra<-NULL
for (k in 2:Kmax){
resaux<-kmeans(res.mca$ind[, -c(1,2)], k)
reskmeanscl_acm[,k-1]<-resaux$cluster
Iintra<-c(Iintra,resaux$tot.withinss)
}
df<-data.frame(K=2:15,Iintra=Iintra)
ggplot(df,aes(x=K,y=Iintra))+geom_line()+geom_point()+xlab("Nombre de classes")+ylab("Inertie intraclasse")
# A COMPLETER
Kmax<-15
reskmeanscl_acm<-matrix(0,nrow=nrow$ind(res.mca),ncol=Kmax-1)
Iintra<-NULL
for (k in 2:Kmax){
resaux<-kmeans(res.mca$ind, k)
reskmeanscl_acm[,k-1]<-resaux$cluster
Iintra<-c(Iintra,resaux$tot.withinss)
}
df<-data.frame(K=2:15,Iintra=Iintra)
ggplot(df,aes(x=K,y=Iintra))+geom_line()+geom_point()+xlab("Nombre de classes")+ylab("Inertie intraclasse")

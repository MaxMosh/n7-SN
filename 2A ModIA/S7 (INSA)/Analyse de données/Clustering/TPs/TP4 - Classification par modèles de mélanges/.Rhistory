a<- 10
b<- 30
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 100
Z<-rmultinom(1, n, prop)
X<-data.frame(X=c(rnorm(Z[1], mean = mu[1], sd = sigma[1])),
rnorm(Z[2], mean = mu[2], sd = sigma[2]),
rnorm(Z[3], mean = mu[3], sd = sigma[3]))
a<- 10
b<- 30
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 100
Z<-rmultinom(1, n, prop)
X<-data.frame(X=c(rnorm(Z[1], mean = mu[1], sd = sigma[1]),
rnorm(Z[2], mean = mu[2], sd = sigma[2]),
rnorm(Z[3], mean = mu[3], sd = sigma[3]))
#labeltrue<- ... # vecteur des vrais labels
a<- 10
b<- 30
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 100
Z<-rmultinom(1, n, prop)
X<-data.frame(X=c(rnorm(Z[1], mean = mu[1], sd = sigma[1]),
rnorm(Z[2], mean = mu[2], sd = sigma[2]),
rnorm(Z[3], mean = mu[3], sd = sigma[3])))
#labeltrue<- ... # vecteur des vrais labels
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
a<- 10
b<- 1
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 100
Z<-rmultinom(1, n, prop)
X<-data.frame(X=c(rnorm(Z[1], mean = mu[1], sd = sigma[1]),
rnorm(Z[2], mean = mu[2], sd = sigma[2]),
rnorm(Z[3], mean = mu[3], sd = sigma[3])))
#labeltrue<- ... # vecteur des vrais labels
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
Z<-rmultinom(n, 1, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
Z<-rmultinom(n, 3, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
a<- 10
b<- 1
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 100
Z<-rmultinom(n, 3, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
labeltrue<- factor(apply(Z, 2, which.max)) # vecteur des vrais labels   TODO
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
a<- 10
b<- 1
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 100
Z<-rmultinom(n, 3, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(1, sum(Z[2,] == 1)), rep(1, sum(Z[3,] == 1))) # vecteur des vrais labels   TODO
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(2, sum(Z[2,] == 1)), rep(3, sum(Z[3,] == 1))) # vecteur des vrais labels   TODO
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
a<- 10
b<- 1
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 100
Z<-rmultinom(n, 3, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(2, sum(Z[2,] == 1)), rep(3, sum(Z[3,] == 1))) # vecteur des vrais labels   TODO
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
a<- 10
b<- 1
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 1000
Z<-rmultinom(n, 3, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(2, sum(Z[2,] == 1)), rep(3, sum(Z[3,] == 1))) # vecteur des vrais labels   MODIF : correction prof (pas sur pour le premier argument de rep)
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
# A completer
res<-Mclust(X, G=3) # MODIF : arg CG
table(res$classification, labeltrue)
# A completer
res<-Mclust(X$X, G=3) # MODIF : arg CG
table(res$classification, labeltrue)
library(knitr)
## Global options
options(max.print="75")
opts_chunk$set(echo=TRUE,
cache=FALSE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE,
class.source="badCode")
opts_knit$set(width=75)
## Pour faire le TP
library(mclust)
library(Rmixmod)
library(ggplot2)
library(gridExtra)
library(FactoMineR)
library(factoextra)
library(reshape2)
library(circlize)
library(viridis)
a<- 10
b<- 1
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 1000
Z<-rmultinom(n, 3, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(2, sum(Z[2,] == 1)), rep(3, sum(Z[3,] == 1))) # vecteur des vrais labels   MODIF : correction prof (pas sur pour le premier argument de rep)
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
# A completer
res<-Mclust(X$X, G=3) # MODIF : arg CG
table(res$classification, labeltrue)
a<- 10
b<- 1
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 1000
Z<-rmultinom(n, 3, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(1, sum(Z[2,] == 1)), rep(1, sum(Z[3,] == 1))) # vecteur des vrais labels   MODIF : correction prof (pas sur pour le premier argument de rep)
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
# A completer
res<-Mclust(X$X, G=3) # MODIF : arg CG
table(res$classification, labeltrue)
adjustedRandIndex(res$classification, labeltrue)
a<- 10
b<- 1
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 1000
Z<-rmultinom(n, 3, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
#labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(2, sum(Z[2,] == 1)), rep(3, sum(Z[3,] == 1))) # vecteur des vrais labels   MODIF : correction prof (pas sur pour le premier argument de rep)
labeltrue<- rep(1:3, times = Z)
a<- 10
b<- 1
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 1000
Z<-rmultinom(n, 3, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
#labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(2, sum(Z[2,] == 1)), rep(3, sum(Z[3,] == 1))) # vecteur des vrais labels   MODIF : correction prof (pas sur pour le premier argument de rep)
labeltrue<- rep(1:3, time = Z)
a<- 10
b<- 1
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 1000
Z<-rmultinom(n, 3, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
#labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(2, sum(Z[2,] == 1)), rep(3, sum(Z[3,] == 1))) # vecteur des vrais labels   MODIF : correction prof (pas sur pour le premier argument de rep)
labeltrue<- rep(1:3, times = Z)
a<- 10
b<- 1
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 1000
Z<-rmultinom(n, 3, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
#labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(2, sum(Z[2,] == 1)), rep(3, sum(Z[3,] == 1))) # vecteur des vrais labels   MODIF : correction prof (pas sur pour le premier argument de rep)
labeltrue<- rep(1:3, times = sum(Z))
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
# A completer
res<-Mclust(X$X, G=3) # MODIF : arg CG
table(res$classification, labeltrue)
#labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(2, sum(Z[2,] == 1)), rep(3, sum(Z[3,] == 1))) # vecteur des vrais labels   MODIF : correction prof (pas sur pour le premier argument de rep)
#labeltrue<- rep(1:3, times = sum(Z)) Minh
labeltrue<-factor(apply(Z, 2, which.max)) # vecteur des vrais labels
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
# A completer
res<-Mclust(X$X, G=3) # MODIF : arg CG
table(res$classification, labeltrue)
labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(2, sum(Z[2,] == 1)), rep(3, sum(Z[3,] == 1))) # vecteur des vrais labels   MODIF : correction prof (pas sur pour le premier argument de rep)
#labeltrue<- rep(1:3, times = sum(Z)) Minh
#labeltrue<-factor(apply(Z, 2, which.max)) # vecteur des vrais  # MODIF :
length(labeltrue)
Z<-rmultinom(n, 1, prop)
a<- 10
b<- 1
mu<-c(-a,0,a) # les moyennes \mu_k
sigma<-c(b,0.5,b) # les \sigma_k
prop<-c(0.2,0.3,0.5)
n<- 1000
Z<-rmultinom(n, 1, prop)
X<-data.frame(X=c(rnorm(sum(Z[1,]), mean = mu[1], sd = sigma[1]),
rnorm(sum(Z[2,]), mean = mu[2], sd = sigma[2]),
rnorm(sum(Z[3,]), mean = mu[3], sd = sigma[3])))
labeltrue<- c(rep(1, sum(Z[1,] == 1)), rep(2, sum(Z[2,] == 1)), rep(3, sum(Z[3,] == 1))) # vecteur des vrais labels   MODIF : correction prof (pas sur pour le premier argument de rep)
#labeltrue<- rep(1:3, times = sum(Z)) Minh
#labeltrue<-factor(apply(Z, 2, which.max)) # vecteur des vrais  # MODIF :
length(labeltrue)
aux<-seq(-(a+4),a+4,0.01)
Y<-data.frame(x=aux,
y1=(prop[1]*dnorm(aux,mu[1],sigma[1])),
y2=(prop[2]*dnorm(aux,mu[2],sigma[2])),
y3=(prop[3]*dnorm(aux,mu[3],sigma[3])))
gvrai<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=Y,col="red")+
geom_line(aes(x=x,y=y2),data=Y,col="blue")+
geom_line(aes(x=x,y=y3),data=Y,col="green")
gvrai
# A completer
res<-Mclust(X$X, G=3) # MODIF : arg CG
table(res$classification, labeltrue)
# A completer
# dans y_k <- \pi_k \times \phi(x; \mu_k,\sigma_k^2)
MelEstim<-data.frame(x=aux,
y1=res$parameters$pro[1] * dnorm(aux, res$parameters$mean[1], res$parameters$variance$sigmasq[1])),
MelEstim<-data.frame(x=aux,
y1=res$parameters$pro[1] * dnorm(aux, res$parameters$mean[1], res$parameters$variance$sigmasq[1])),
MelEstim<-data.frame(x=aux,
y1=res$parameters$pro[1] * dnorm(aux, res$parameters$mean[1], res$parameters$variance$sigmasq[1]),
y2=res$parameters$pro[2] * dnorm(aux, res$parameters$mean[2], res$parameters$variance$sigmasq[2]),
y3=res$parameters$pro[3] * dnorm(aux, res$parameters$mean[3], res$parameters$variance$sigmasq[3]))       # MODIF : args CG
# A completer
# dans y_k <- \pi_k \times \phi(x; \mu_k,\sigma_k^2)
MelEstim<-data.frame(x=aux,
y1=res$parameters$pro[1] * dnorm(aux, res$parameters$mean[1], res$parameters$variance$sigmasq[1]),
y2=res$parameters$pro[2] * dnorm(aux, res$parameters$mean[2], res$parameters$variance$sigmasq[2]),
y3=res$parameters$pro[3] * dnorm(aux, res$parameters$mean[3], res$parameters$variance$sigmasq[3]))       # MODIF : args CG
MelEstim<-data.frame(MelEstim,Somme=apply(MelEstim[,2:4],1,sum))
gMelEst<-ggplot(X,aes(x=X))+
geom_histogram(aes(y = after_stat(density)),bins=100)+
geom_line(aes(x=x,y=y1),data=MelEstim,col="red")+
geom_line(aes(x=x,y=y2),data=MelEstim,col="blue")+
geom_line(aes(x=x,y=y3),data=MelEstim,col="green")+
geom_line(aes(x=x,y=Somme),data=MelEstim,col="cyan",linetype = "dashed",size=1.5)
gMelEst
# dans p, les proba a posteriori d'appartenance t_{11},\ldots,t_{n1},t_{12},\ldots,t_{n3}
MelProba<-data.frame(x=rep(aux,3),
p= c(res$z[,1], res$z[,2], res$z[,3]),
class=as.factor(rep(c(1,2,3),each=length(aux)))) # MODIF : arg 2 CG
# dans p, les proba a posteriori d'appartenance t_{11},\ldots,t_{n1},t_{12},\ldots,t_{n3}
MelProba<-data.frame(x=rep(aux,3),
p= c(res$Z[,1], res$Z[,2], res$Z[,3]),
class=as.factor(rep(c(1,2,3),each=length(aux)))) # MODIF : arg 2 CG
MelProba<-data.frame(x=rep(aux,3),
p= c(MelEstim$z[,1], MelEstim$z[,2], MelEstim$z[,3]),
class=as.factor(rep(c(1,2,3),each=length(aux)))) # MODIF : arg 2 CG
# dans p, les proba a posteriori d'appartenance t_{11},\ldots,t_{n1},t_{12},\ldots,t_{n3}
MelProba<-data.frame(x=rep(aux,3),
p= c(MelEstim$y1 / MelEstim$Somme, MelEstim$y2 / MelEstim$Somme, MelEstim$y3 / MelEstim$Somme),
class=as.factor(rep(c(1,2,3),each=length(aux)))) # MODIF : arg 2 CG
gprobapost<-ggplot(MelProba,aes(x=x,y=p,col=class))+geom_line()
gprobapost
df<-data.frame(lab = labeltrue, probamax = apply(res$z, 1, max)) # MODIF : les 2 args CG
gprobamax<-ggplot(df,aes(x=lab,y=probamax))+geom_boxplot()
grid.arrange(gvrai,gMelEst,gprobapost,gprobamax,ncol=2)
df<-data.frame(lab = as.factor(apply(res$z, 1, which.max)), probamax = apply(res$z, 1, max)) # MODIF : les 2 args CG
gprobamax<-ggplot(df,aes(x=lab,y=probamax))+geom_boxplot()
grid.arrange(gvrai,gMelEst,gprobapost,gprobamax,ncol=2)
library(mclust)
data(Baudry_etal_2010_JCGS_examples)
Data<-ex4.1
ggplot(Data,aes(x=X1,y=X2))+geom_point()
# A COMPLETER
resBICdiag< Mclust(Data, G = 2:10, modelNames = "VII")    # MODIF : tous les args CG
E
# A COMPLETER
resBICdiag< Mclust(Data, G = 2:10, modelNames = "EII")    # MODIF : tous les args CG
# A COMPLETER
resBICdiag< Mclust(Data, G = 2:10, modelNames = c("EII", "VII", "EEI", "VEI", "EVI", "VVI")    # MODIF : tous les args CG
# A COMPLETER
resBICdiag< Mclust(Data, G = 2:10, modelNames = c("EII", "VII", "EEI", "VEI", "EVI", "VVI"))    # MODIF : correction prof
# A COMPLETER
resBICdiag< Mclust(Data, G = 2:10, modelNames = c("EII", "VII", "EEI", "VEI", "EVI", "VVI"))    # MODIF : correction prof
# A COMPLETER
resBICdiag<- Mclust(Data, G = 2:10, modelNames = c("EII", "VII", "EEI", "VEI", "EVI", "VVI"))    # MODIF : correction prof
summary(resBICdiag)
fviz_mclust(resBICdiag,what="BIC") # MODIF : code Ewan
summary(resBICdiag)
# Visualisation du clustering
fviz_cluster(resBICdiag, data = Data, ellipse, type = "norm", geom = "point") + ggtitle("")
# Visualisation du clustering
fviz_cluster(resBICdiag, data = Data, ellipse, type = "norm", geom = "point") + ggtitle("") + theme(legend.position = "none") # MODIF : correction prof
# Visualisation du clustering
fviz_cluster(resBICdiag, data = Data, ellipse, type = "norm", geom = "point") + ggtitle("") + theme(legend.position = "none") # MODIF : correction prof
grid.arrange(h1, h2)
# Visualisation du clustering
h2 <- fviz_cluster(resBICdiag, data = Data, ellipse, type = "norm", geom = "point") + ggtitle("") + theme(legend.position = "none") # MODIF : correction prof (complétion fonction °+ attribution variable)
# Visualisation du clustering
h2 <- fviz_cluster(resBICdiag, data = Data, ellipse, type = "norm", geom = "point")+ggtitle("")+theme(legend.position = "none") # MODIF : correction prof (complétion fonction °+ attribution variable)
wine<-read.table("wine.txt",header=T)
wine$Qualite = as.factor(wine$Qualite)
wine$Type = factor(wine$Type, labels = c("blanc", "rouge"))
wineinit<-wine
wine[,-c(1,2)]<-scale(wine[,-c(1,2)],center=T,scale=T)
head(wine)
resacp<-PCA(wine,quali.sup=c(1,2), scale.unit = TRUE,graph=FALSE)
# A FAIRE
library(mclust)
# Déterminer le nombre optimal de clusters
modèle <- Mclust(wine[,-c(1,2)])
summary(modèle)
# Visualisation des résultats
plot(modèle, what = "classification")
# Comparaison avec K-means et CAH
# Ici, vous devez ajouter le code de comparaison avec les résultats obtenus précédemment
resacp<-PCA(wine,quali.sup=c(1,2), scale.unit = TRUE,graph=FALSE)
resacp<-PCA(wine,quali.sup=c(1,2), scale.unit = TRUE,graph=TRUE)
resacp<-PCA(wine,quali.sup=c(1,2), scale.unit = TRUE,graph=FALSE)
# A FAIRE
# A FAIRE
resmclust<-Mclust(wine[,-5],G=1:9,modelNames = c("EEE","VEE","EVV","VVV"))
summary(resmclust)
fviz_pca(resacp)
summary(wine)
